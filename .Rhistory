tail (indicators [grepl ("basic", Label),
.(IndicatorId, ShortName, Label)])
# First, use dhs_countries() to query the list of DHS countries to identify the
# DHS country code for each country.
countries <- dhs_countries()
dhscc <- countries[CountryName %in% c("Ethiopia"), DHS_CountryCode]
print (dhscc)
# Now query the indicators dataset for the basic vaccinations for
# these countries.
statcomp <- dhs_data(indicatorIds = "CH_VACC_C_BAS", countryIds = dhscc)
statcomp[,.(Indicator, CountryName, SurveyYear, Value, DenominatorWeighted)]
ggplot(statcomp, aes(SurveyYear, Value, col=CountryName)) +
geom_point() + geom_line()
dhscc <- countries[CountryName %in% c("Ethiopia", "Ghana"), DHS_CountryCode]
print (dhscc)
# Now query the indicators dataset for the basic vaccinations for
# these countries.
statcomp <- dhs_data(indicatorIds = "CH_VACC_C_BAS", countryIds = dhscc)
statcomp[,.(Indicator, CountryName, SurveyYear, Value, DenominatorWeighted)]
ggplot(statcomp, aes(SurveyYear, Value, col=CountryName)) +
geom_point() + geom_line()
dhscc <- countries[CountryName %in% c("Ethiopia"), DHS_CountryCode]
print (dhscc)
# Now query the indicators dataset for the basic vaccinations for
# these countries.
statcomp <- dhs_data(indicatorIds = "CH_VACC_C_BAS", countryIds = dhscc)
statcomp[,.(Indicator, CountryName, SurveyYear, Value, DenominatorWeighted)]
ggplot(statcomp, aes(SurveyYear, Value, col=CountryName)) +
geom_point() + geom_line()
library (plotly)
plot_ly (statcomp)
plot_ly (statcomp, x = SurveyYear, y = Value)
plot_ly (statcomp, x = "SurveyYear", y = "Value")
plot_ly (statcomp, x = ~SurveyYear, y = ~Value)
ggplot(statcomp, aes(SurveyYear, Value, col=CountryName)) +
geom_point() + geom_line()
statcomp
View (statcomp)
View (indicators)
## make a call with no arguments
sc <- dhs_survey_characteristics()
View(sc)
sc[grepl("Malaria", sc$SurveyCharacteristicName), ]
# How to use rdhs?
# https://cran.r-project.org/web/packages/rdhs/vignettes/introduction.html
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (ggplot2)
# clear workspace
rm (list = ls ())
# How to use rdhs?
# https://cran.r-project.org/web/packages/rdhs/vignettes/introduction.html
# https://cran.r-project.org/web/packages/rdhs/index.html
# ------------------------------------------------------------------------------
# Overview
# rdhs is a package for management and analysis of Demographic and Health Survey
# (DHS) data. This includes functionality to:
#
# 1. Access standard indicator data (i.e. DHS STATcompiler) in R via the DHS API.
# 2. Identify surveys and datasets relevant to a particular analysis.
# 3. Download survey datasets from the DHS website.
# 4. Load datasets and associated metadata into R.
# 5. Extract variables and combining datasets for pooled multi-survey analyses.
#
# This process is described below and should cover most functionality that will
# be needed for working with these datasets.
# ------------------------------------------------------------------------------
# load required packages
library (rdhs)
library (ggplot2)
# clear workspace
rm (list = ls ())
# How to use rdhs?
# https://cran.r-project.org/web/packages/rdhs/vignettes/introduction.html
# https://cran.r-project.org/web/packages/rdhs/index.html
# ------------------------------------------------------------------------------
# Overview
# rdhs is a package for management and analysis of Demographic and Health Survey
# (DHS) data. This includes functionality to:
#
# 1. Access standard indicator data (i.e. DHS STATcompiler) in R via the DHS API.
# 2. Identify surveys and datasets relevant to a particular analysis.
# 3. Download survey datasets from the DHS website.
# 4. Load datasets and associated metadata into R.
# 5. Extract variables and combining datasets for pooled multi-survey analyses.
#
# This process is described below and should cover most functionality that will
# be needed for working with these datasets.
# ------------------------------------------------------------------------------
# load required packages
library (rdhs)
library (ggplot2)
# clear workspace
rm (list = ls ())
# How to use rdhs?
# https://cran.r-project.org/web/packages/rdhs/vignettes/introduction.html
# https://cran.r-project.org/web/packages/rdhs/index.html
# ------------------------------------------------------------------------------
# Overview
# rdhs is a package for management and analysis of Demographic and Health Survey
# (DHS) data. This includes functionality to:
#
# 1. Access standard indicator data (i.e. DHS STATcompiler) in R via the DHS API.
# 2. Identify surveys and datasets relevant to a particular analysis.
# 3. Download survey datasets from the DHS website.
# 4. Load datasets and associated metadata into R.
# 5. Extract variables and combining datasets for pooled multi-survey analyses.
#
# This process is described below and should cover most functionality that will
# be needed for working with these datasets.
# ------------------------------------------------------------------------------
# load required packages
library (rdhs)
library (ggplot2)
# clear workspace
rm (list = ls ())
survs
# use dhs api, etc to analyse vaccine equity
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (data.table)
library (ggplot2)
library (survey)
library (haven)
# clear workspace
rm (list = ls ())
# Download survey datasets from the DHS website.
## set up your credentials (run it first time)
# set_rdhs_config (email = "kaja.abbas@lshtm.ac.uk",
#                  project = "Health impact of public health interventions",
#                  data_frame = "data.table::as.data.table")
## make a call with no arguments
sc <- dhs_survey_characteristics ()
sc [grepl ("Vaccination",
sc$SurveyCharacteristicName), ]
#     SurveyCharacteristicID    SurveyCharacteristicName
# 1:  93                        Vaccinations from health facilities
# lets find all the surveys that fit our search criteria
survs <- dhs_surveys (surveyCharacteristicIds = 93,
countryIds = c("ET"),
surveyType = "DHS",
surveyYearStart = 2016)
survs
View(survs)
survs$SurveyId
# and lastly use this to find the datasets we will want to download and
# let's download the flat files (.dat) datasets (have a look in the dhs_datasets
# documentation for all argument options, and fileformat abbreviations etc.)
# datasets <- dhs_datasets (surveyIds = survs$SurveyId,
#                           fileFormat = "flat")
datasets <- dhs_datasets (surveyIds = survs$SurveyId,
fileFormat = "flat")
View(datasets)
# download datasets
downloads <- get_datasets (datasets$FileName)
# download datasets
downloads <- get_datasets (datasets$FileName)
# download datasets
downloads <- get_datasets (datasets$FileName)
# and lastly use this to find the datasets we will want to download and
# let's download the flat files (.dat) datasets (have a look in the dhs_datasets
# documentation for all argument options, and fileformat abbreviations etc.)
# datasets <- dhs_datasets (surveyIds = survs$SurveyId,
#                           fileFormat = "flat")
datasets <- dhs_datasets (surveyIds = survs$SurveyId,
fileFormat = "flat")
# download datasets
downloads <- get_datasets (datasets$FileName)
# and lastly use this to find the datasets we will want to download and
# let's download the flat files (.dat) datasets (have a look in the dhs_datasets
# documentation for all argument options, and fileformat abbreviations etc.)
# datasets <- dhs_datasets (surveyIds = survs$SurveyId,
#                           fileFormat = "flat")
datasets <- dhs_datasets (surveyIds = survs$SurveyId,
fileFormat = "flat")
# use dhs api, etc to analyse vaccine equity
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (data.table)
library (ggplot2)
library (survey)
library (haven)
# clear workspace
rm (list = ls ())
# Download survey datasets from the DHS website.
## set up your credentials (run it first time)
# set_rdhs_config (email = "kaja.abbas@lshtm.ac.uk",
#                  project = "Health impact of public health interventions",
#                  data_frame = "data.table::as.data.table")
## make a call with no arguments
sc <- dhs_survey_characteristics ()
sc [grepl ("Vaccination",
sc$SurveyCharacteristicName), ]
#     SurveyCharacteristicID    SurveyCharacteristicName
# 1:  93                        Vaccinations from health facilities
# lets find all the surveys that fit our search criteria
survs <- dhs_surveys (surveyCharacteristicIds = 93,
countryIds = c("ET"),
surveyType = "DHS",
surveyYearStart = 2016)
# and lastly use this to find the datasets we will want to download and
# let's download the flat files (.dat) datasets (have a look in the dhs_datasets
# documentation for all argument options, and fileformat abbreviations etc.)
# datasets <- dhs_datasets (surveyIds = survs$SurveyId,
#                           fileFormat = "flat")
datasets <- dhs_datasets (surveyIds = survs$SurveyId,
fileFormat = "flat")
# use dhs api, etc to analyse vaccine equity
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (data.table)
library (ggplot2)
library (survey)
library (haven)
# clear workspace
rm (list = ls ())
# use dhs api, etc to analyse vaccine equity
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (data.table)
library (ggplot2)
library (survey)
library (haven)
# clear workspace
rm (list = ls ())
set_rdhs_config (email = "kaja.abbas@lshtm.ac.uk",
project = "Health impact of public health interventions",
data_frame = "data.table::as.data.table")
library (rdhs)
# use dhs api, etc to analyse vaccine equity
# https://cran.r-project.org/web/packages/rdhs/index.html
# load required packages
library (rdhs)
library (data.table)
library (ggplot2)
library (survey)
library (haven)
# clear workspace
rm (list = ls ())
## set up your credentials (run it first time)
set_rdhs_config (email = "kaja.abbas@lshtm.ac.uk",
project = "Health impact of public health interventions",
data_frame = "data.table::as.data.table")
0.92 * 52/12
data (package = "prime")
library (prime)
View (data.mortall.unwpp.mx)
RunCountry
RunCohort
head (data.mortall.unwpp.mx)
library (prime)
View (data.sexual_debut)
View (data.sexual_debut [cluster.id == NA])
View (data.sexual_debut [is.na (cluster.id)])
View (data.sexual_debut)
library (prime)
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
setwd("~/GitHub/vaccine_equity_ethiopia")
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
# Plots for vaccine equity in Ethiopia study
# load libraries
library (data.table)
library (ggplot2)
library (ggpubr)
# clear workspace
rm (list = ls ())
# ------------------------------------------------------------------------------
# Plot - Vaccination coverage
# Vaccination coverage in Ethiopia among children aged 12-23 months by
# socioeconomic, geographic, maternal and child characteristics.
#   socioeconomic (household wealth, religion, ethnicity)
#   geographic (area of residence, region)
#   maternal (maternal age at birth, maternal education, maternal marital status, sex of household head)
#   child (sex of child, birth order) characteristics
# ------------------------------------------------------------------------------
# read file with plot data
plot_data <- fread ("data_coverage.csv")
plot_list <- vector (mode = "list", length = 4)
# loop through plots for vaccination coverage
for (i in 1:4) {
plot_dat <- switch (i,
# socioeconomic characteristics
"1" = plot_data [characteristics == "Household wealth" |
characteristics == "Religion" |
characteristics == "Ethnicity"],
# geographic characteristics
"2" = plot_data [characteristics == "Residence" |
characteristics == "Region"],
# maternal characteristics
"3" = plot_data [characteristics == "Maternal age" |
characteristics == "Maternal education" |
characteristics == "Marital status" |
characteristics == "Household head"],
# child characteristics
"4" = plot_data [characteristics == "Child" |
characteristics == "Birth order"]
)
# plot title
plot_title <- switch (i,
"1" = "Socioeconomic characteristics",
"2" = "Geographic characteristics",
"3" = "Maternal characteristics",
"4" = "Child characteristics")
# plot
plot_list [[i]] <- ggplot (data = plot_dat,
aes (x = reorder (specific_characteristics, -coverage),
y = coverage,
fill = -coverage)) +
geom_bar (stat = "identity", width = 0.75, alpha=0.9) +
labs (x = "",
y = "Basic vaccination coverage (%)",
title = plot_title
) +
# ggtitle (plot_title) +
coord_flip () +
facet_grid (characteristics ~ ., scales = "free") +
theme_bw () +
theme (legend.position="none") +
theme (plot.title = element_text (size = 18)) +
theme (axis.text = element_text (size = 14)) +
theme (axis.title = element_text (size = 18))
}
# arrange plot columns and rows
p <- ggarrange (plotlist = plot_list, ncol = 2, nrow = 2)
print (p)
p <- annotate_figure (p,
top = text_grob ("Basic vaccination coverage by socioeconomic, geographic, maternal and child characteristics",
color = "black",
size = 24))
# save plot to file
ggsave (filename = "plot_socioeconomic_geographic_maternal_child_coverage.jpg",
plot = p,
units = "in", width = 14, height = 12,
dpi = 300)
# print plot
print (p)
# ------------------------------------------------------------------------------
# Plot - Adjusted odds ratios
# Inequities in vaccination coverage in Ethiopia associated with
# socioeconomic, geographic, maternal and child characteristics.
# ------------------------------------------------------------------------------
# read file with plot data
plot_data <- fread ("data_aor.csv")
plot_list <- vector (mode = "list", length = 2)
# loop through 2 subplots
for (i in 1:2) {
plot_dat <- switch (i,
"1" = plot_data [characteristics != "Region" &
characteristics != "Birth order" &
characteristics != "Child" ],
"2" = plot_data [characteristics == "Region" |
characteristics == "Birth order" |
characteristics == "Child"]
)
# plot
plot_list [[i]] <- ggplot (data = plot_dat,
aes (x = reorder (specific_characteristics, -AOR),
y = AOR,
fill = -AOR)) +
geom_bar (stat = "identity", width = 0.75, alpha=0.9) +
geom_errorbar (aes (ymin = low_95ci, ymax = high_95ci, width = 0.25),
col = "orange") +
labs (x = "",
y = "Adjusted odds ratios") +
coord_flip () +
facet_grid (characteristics ~ ., scales = "free") +
theme_bw () +
theme(legend.position="none")
}
colnames (plot_data)
table (plot_data$characteristics)
table (plot_data$characteristics)
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
View (plot_data)
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
# Plots for vaccine equity in Ethiopia study
# load libraries
library (data.table)
library (ggplot2)
library (ggpubr)
# clear workspace
rm (list = ls ())
# ------------------------------------------------------------------------------
# Plot - Vaccination coverage
# Vaccination coverage in Ethiopia among children aged 12-23 months by
# socioeconomic, geographic, maternal and child characteristics.
#   socioeconomic (household wealth, religion, ethnicity)
#   geographic (area of residence, region)
#   maternal (maternal age at birth, maternal education, maternal marital status, sex of household head)
#   child (sex of child, birth order) characteristics
# ------------------------------------------------------------------------------
# read file with plot data
plot_data <- fread ("data_coverage.csv")
plot_list <- vector (mode = "list", length = 4)
# loop through plots for vaccination coverage
for (i in 1:4) {
plot_dat <- switch (i,
# socioeconomic characteristics
"1" = plot_data [characteristics == "Household wealth" |
characteristics == "Religion" |
characteristics == "Ethnicity"],
# geographic characteristics
"2" = plot_data [characteristics == "Residence" |
characteristics == "Region"],
# maternal characteristics
"3" = plot_data [characteristics == "Maternal age" |
characteristics == "Maternal education" |
characteristics == "Marital status" |
characteristics == "Household head"],
# child characteristics
"4" = plot_data [characteristics == "Child" |
characteristics == "Birth order"]
)
# plot title
plot_title <- switch (i,
"1" = "Socioeconomic characteristics",
"2" = "Geographic characteristics",
"3" = "Maternal characteristics",
"4" = "Child characteristics")
# plot
plot_list [[i]] <- ggplot (data = plot_dat,
aes (x = reorder (specific_characteristics, -coverage),
y = coverage,
fill = -coverage)) +
geom_bar (stat = "identity", width = 0.75, alpha=0.9) +
labs (x = "",
y = "Basic vaccination coverage (%)",
title = plot_title
) +
# ggtitle (plot_title) +
coord_flip () +
facet_grid (characteristics ~ ., scales = "free") +
theme_bw () +
theme (legend.position="none") +
theme (plot.title = element_text (size = 22)) +
theme (axis.text = element_text (size = 18)) +
theme (axis.title = element_text (size = 18)) +
theme (strip.text.y = element_text (size = 12))
}
# arrange plot columns and rows
p <- ggarrange (plotlist = plot_list, ncol = 2, nrow = 2)
print (p)
p <- annotate_figure (p,
top = text_grob ("Basic vaccination coverage by socioeconomic, geographic, maternal and child characteristics",
color = "black",
size = 33))
# save plot to file
ggsave (filename = "plot_socioeconomic_geographic_maternal_child_coverage.jpg",
plot = p,
units = "in", width = 20, height = 20,
dpi = 300)
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
source('~/GitHub/vaccine_equity_ethiopia/plot.R')
